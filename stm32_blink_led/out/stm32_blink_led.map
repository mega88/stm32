
Discarded input sections

 .data          0x00000000        0x0 out/startup.o
 .bss           0x00000000        0x0 out/startup.o
 .text          0x00000000        0x0 out/gpio.o
 .data          0x00000000        0x0 out/gpio.o
 .bss           0x00000000        0x0 out/gpio.o
 .text          0x00000000        0x0 out/main.o
 .data          0x00000000        0x0 out/main.o
 .bss           0x00000000        0x0 out/main.o
 .text          0x00000000        0x0 out/vectors.o
 .data          0x00000000        0x0 out/vectors.o
 .bss           0x00000000        0x0 out/vectors.o

Memory Configuration

Name             Origin             Length             Attributes
rom              0x08000000         0x00020000         xr
ram              0x20000000         0x00005000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD out/startup.o
LOAD out/gpio.o
LOAD out/main.o
LOAD out/vectors.o
LOAD c:/program files/gnu tools arm embedded/4.6 2012q2/bin/../lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/lib/armv7-m\libstdc++.a
LOAD c:/program files/gnu tools arm embedded/4.6 2012q2/bin/../lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/lib/armv7-m\libm.a
START GROUP
LOAD c:/program files/gnu tools arm embedded/4.6 2012q2/bin/../lib/gcc/arm-none-eabi/4.6.2/armv7-m\libgcc.a
LOAD c:/program files/gnu tools arm embedded/4.6 2012q2/bin/../lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/lib/armv7-m\libg.a
LOAD c:/program files/gnu tools arm embedded/4.6 2012q2/bin/../lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/lib/armv7-m\libc.a
END GROUP
                0x00000000                __main_stack_size = 0x0
                0x00000400                __process_stack_size = 0x400
                [0x00000000]                PROVIDE (__main_stack_size, __main_stack_size)
                [0x00000400]                PROVIDE (__process_stack_size, __process_stack_size)
                0x08000000                __rom_start = ORIGIN (rom)
                0x00020000                __rom_size = 0x20000
                0x08020000                __rom_end = (__rom_start + __rom_size)
                0x20000000                __ram_start = ORIGIN (ram)
                0x00005000                __ram_size = 0x5000
                0x20005000                __ram_end = (__ram_start + __ram_size)
                [0x08000000]                PROVIDE (__rom_start, __rom_start)
                [0x00020000]                PROVIDE (__rom_size, __rom_size)
                [0x08020000]                PROVIDE (__rom_end, __rom_end)
                [0x20000000]                PROVIDE (__ram_start, __ram_start)
                [0x00005000]                PROVIDE (__ram_size, __ram_size)
                [0x20005000]                PROVIDE (__ram_end, __ram_end)

.text           0x08000000      0x4c0
                0x08000000                . = ALIGN (0x4)
                0x08000000                __text_start = .
                [0x08000000]                PROVIDE (__text_start, __text_start)
                0x08000000                . = ALIGN (0x4)
 *(.vectors)
 .vectors       0x08000000      0x130 out/vectors.o
                0x08000000                vectors
                0x08000130                . = ALIGN (0x4)
 *(.text .text.* .gnu.linkonce.t.*)
 .text          0x08000130       0x68 out/startup.o
                0x08000130                Reset_Handler
                0x08000172                low_level_init_1
                0x08000172                low_level_init_0
                0x08000172                __default_low_level_init
 .text.gpio_init
                0x08000198       0xec out/gpio.o
                0x08000198                gpio_init
 .text.gpio_pin_cfg
                0x08000284       0x68 out/gpio.o
                0x08000284                gpio_pin_cfg
 .text.main     0x080002ec       0x8c out/main.o
                0x080002ec                main
 .text.flash_latency
                0x08000378       0x60 out/main.o
 .text.pll_start
                0x080003d8       0xcc out/main.o
 .text.system_init
                0x080004a4        0xc out/main.o
 .text.__Default_Handler
                0x080004b0       0x10 out/vectors.o
                0x080004b0                EXTI2_IRQHandler
                0x080004b0                TIM8_TRG_COM_IRQHandler
                0x080004b0                TIM8_CC_IRQHandler
                0x080004b0                DebugMon_Handler
                0x080004b0                TIM1_CC_IRQHandler
                0x080004b0                HardFault_Handler
                0x080004b0                TIM6_IRQHandler
                0x080004b0                SysTick_Handler
                0x080004b0                PVD_IRQHandler
                0x080004b0                SDIO_IRQHandler
                0x080004b0                __Reserved_0x1C_Handler
                0x080004b0                PendSV_Handler
                0x080004b0                NMI_Handler
                0x080004b0                EXTI3_IRQHandler
                0x080004b0                __Reserved_0x20_Handler
                0x080004b0                USB_HP_CAN_TX_IRQHandler
                0x080004b0                EXTI0_IRQHandler
                0x080004b0                I2C2_EV_IRQHandler
                0x080004b0                UsageFault_Handler
                0x080004b0                ADC1_2_IRQHandler
                0x080004b0                SPI1_IRQHandler
                0x080004b0                CAN_SCE_IRQHandler
                0x080004b0                TAMPER_IRQHandler
                0x080004b0                TIM8_UP_IRQHandler
                0x080004b0                DMA2_Channel2_IRQHandler
                0x080004b0                DMA1_Channel4_IRQHandler
                0x080004b0                USART3_IRQHandler
                0x080004b0                RTC_IRQHandler
                0x080004b0                DMA1_Channel7_IRQHandler
                0x080004b0                UART5_IRQHandler
                0x080004b0                ADC3_IRQHandler
                0x080004b0                USBWakeup_IRQHandler
                0x080004b0                TIM4_IRQHandler
                0x080004b0                CAN_RX1_IRQHandler
                0x080004b0                DMA2_Channel1_IRQHandler
                0x080004b0                __Reserved_0x34_Handler
                0x080004b0                I2C1_EV_IRQHandler
                0x080004b0                DMA1_Channel6_IRQHandler
                0x080004b0                UART4_IRQHandler
                0x080004b0                TIM3_IRQHandler
                0x080004b0                RCC_IRQHandler
                0x080004b0                TIM1_TRG_COM_IRQHandler
                0x080004b0                DMA1_Channel1_IRQHandler
                0x080004b0                EXTI15_10_IRQHandler
                0x080004b0                TIM7_IRQHandler
                0x080004b0                TIM5_IRQHandler
                0x080004b0                __Reserved_0x28_Handler
                0x080004b0                EXTI9_5_IRQHandler
                0x080004b0                SPI2_IRQHandler
                0x080004b0                USB_LP_CAN_RX0_IRQHandler
                0x080004b0                MemManage_Handler
                0x080004b0                __Reserved_0x24_Handler
                0x080004b0                SVC_Handler
                0x080004b0                DMA1_Channel5_IRQHandler
                0x080004b0                EXTI4_IRQHandler
                0x080004b0                DMA1_Channel3_IRQHandler
                0x080004b0                FSMC_IRQHandler
                0x080004b0                TIM1_UP_IRQHandler
                0x080004b0                WWDG_IRQHandler
                0x080004b0                TIM2_IRQHandler
                0x080004b0                TIM1_BRK_IRQHandler
                0x080004b0                EXTI1_IRQHandler
                0x080004b0                RTCAlarm_IRQHandler
                0x080004b0                DMA2_Channel4_5_IRQHandler
                0x080004b0                USART2_IRQHandler
                0x080004b0                I2C2_ER_IRQHandler
                0x080004b0                DMA1_Channel2_IRQHandler
                0x080004b0                TIM8_BRK_IRQHandler
                0x080004b0                FLASH_IRQHandler
                0x080004b0                BusFault_Handler
                0x080004b0                USART1_IRQHandler
                0x080004b0                SPI3_IRQHandler
                0x080004b0                I2C1_ER_IRQHandler
                0x080004b0                DMA2_Channel3_IRQHandler
                0x080004c0                . = ALIGN (0x4)
 *(.glue_7t .glue_7)
 .glue_7        0x00000000        0x0 linker stubs
 .glue_7t       0x00000000        0x0 linker stubs
                0x080004c0                . = ALIGN (0x4)
 *(.rodata .rodata.* .gnu.linkonce.r.*)
                0x080004c0                . = ALIGN (0x4)
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x080004c0                . = ALIGN (0x4)
 *(.gcc_except_table)
                0x080004c0                . = ALIGN (0x4)
 *(.eh_frame_hdr)
                0x080004c0                . = ALIGN (0x4)
 *(.eh_frame)
                0x080004c0                . = ALIGN (0x4)
 *(.init)
                0x080004c0                . = ALIGN (0x4)
                0x080004c0                __preinit_array_start = .
 *(.preinit_array)
                0x080004c0                . = ALIGN (0x4)
                0x080004c0                __preinit_array_end = .
                0x080004c0                __init_array_start = .
 *(SORT(.init_array.*))
                0x080004c0                . = ALIGN (0x4)
 *(.init_array)
                0x080004c0                . = ALIGN (0x4)
                0x080004c0                __init_array_end = .
 *(.fini)
                0x080004c0                . = ALIGN (0x4)
                0x080004c0                __fini_array_start = .
 *(.fini_array)
                0x080004c0                . = ALIGN (0x4)
 *(SORT(.fini_array.*))
                0x080004c0                . = ALIGN (0x4)
                0x080004c0                __fini_array_end = .
                0x080004c0                . = ALIGN (0x4)
                0x080004c0                __text_end = .
                [0x080004c0]                PROVIDE (__text_end, __text_end)

.vfp11_veneer   0x080004c0        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x080004c0        0x0
 .v4_bx         0x00000000        0x0 linker stubs
                0x080004c0                . = ALIGN (0x4)
                0x080004c0                __exidx_start = .
                [0x080004c0]                PROVIDE (__exidx_start, __exidx_start)

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x080004c0                . = ALIGN (0x4)
                0x080004c0                __exidx_end = .
                [0x080004c0]                PROVIDE (__exidx_end, __exidx_end)

.data           0x20000000        0x0 load address 0x080004c0
                0x20000000                . = ALIGN (0x4)
                0x080004c0                __data_init_start = LOADADDR (.data)
                [0x080004c0]                PROVIDE (__data_init_start, __data_init_start)
                0x20000000                __data_start = .
                [0x20000000]                PROVIDE (__data_start, __data_start)
                0x20000000                . = ALIGN (0x4)
 *(.data .data.* .gnu.linkonce.d.*)
                0x20000000                . = ALIGN (0x4)
                0x20000000                __data_end = .
                [0x20000000]                PROVIDE (__data_end, __data_end)

.bss            0x20000000        0x0
                0x20000000                . = ALIGN (0x4)
                0x20000000                __bss_start = .
                [0x20000000]                PROVIDE (__bss_start, __bss_start)
                0x20000000                . = ALIGN (0x4)
 *(.bss .bss.* .gnu.linkonce.b.*)
                0x20000000                . = ALIGN (0x4)
 *(COMMON)
                0x20000000                . = ALIGN (0x4)
                0x20000000                __bss_end = .
                [0x20000000]                PROVIDE (__bss_end, __bss_end)

.stack          0x20000000      0x400
                0x20000000                . = ALIGN (0x8)
                0x20000000                __stack_start = .
                [0x20000000]                PROVIDE (__stack_start, __stack_start)
                0x20000000                . = ALIGN (0x8)
                0x20000000                __main_stack_start = .
                [0x20000000]                PROVIDE (__main_stack_start, __main_stack_start)
                0x20000000                . = (. + __main_stack_size)
                0x20000000                . = ALIGN (0x8)
                0x20000000                __main_stack_end = .
                [0x20000000]                PROVIDE (__main_stack_end, __main_stack_end)
                0x20000000                . = ALIGN (0x8)
                0x20000000                __process_stack_start = .
                [0x20000000]                PROVIDE (__process_stack_start, __process_stack_start)
                0x20000400                . = (. + __process_stack_size)
 *fill*         0x20000000      0x400 00
                0x20000400                . = ALIGN (0x8)
                0x20000400                __process_stack_end = .
                [0x20000400]                PROVIDE (__process_stack_end, __process_stack_end)
                0x20000400                . = ALIGN (0x8)
                0x20000400                __stack_end = .
                [0x20000400]                PROVIDE (__stack_end, __stack_end)
                0x20000400                . = ALIGN (0x4)
                0x20000400                __heap_start = .
                [0x20000400]                PROVIDE (__heap_start, __heap_start)
                0x20000400                . = ALIGN (0x4)
                0x20005000                __heap_end = __ram_end
                [0x20005000]                PROVIDE (__heap_end, __heap_end)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xa0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 out/startup.o
 .debug_aranges
                0x00000020       0x28 out/gpio.o
 .debug_aranges
                0x00000048       0x38 out/main.o
 .debug_aranges
                0x00000080       0x20 out/vectors.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x677
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000       0x53 out/startup.o
 .debug_info    0x00000053      0x250 out/gpio.o
 .debug_info    0x000002a3      0x333 out/main.o
 .debug_info    0x000005d6       0xa1 out/vectors.o

.debug_abbrev   0x00000000      0x292
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x14 out/startup.o
 .debug_abbrev  0x00000014       0xed out/gpio.o
 .debug_abbrev  0x00000101      0x110 out/main.o
 .debug_abbrev  0x00000211       0x81 out/vectors.o

.debug_line     0x00000000      0x470
 *(.debug_line)
 .debug_line    0x00000000       0x5a out/startup.o
 .debug_line    0x0000005a      0x1a1 out/gpio.o
 .debug_line    0x000001fb      0x237 out/main.o
 .debug_line    0x00000432       0x3e out/vectors.o

.debug_frame    0x00000000      0x100
 *(.debug_frame)
 .debug_frame   0x00000000       0x48 out/gpio.o
 .debug_frame   0x00000048       0x88 out/main.o
 .debug_frame   0x000000d0       0x30 out/vectors.o

.debug_str      0x00000000      0x223
 *(.debug_str)
 .debug_str     0x00000000      0x16c out/gpio.o
                                0x1a0 (size before relaxing)
 .debug_str     0x0000016c       0x82 out/main.o
                                0x1e1 (size before relaxing)
 .debug_str     0x000001ee       0x35 out/vectors.o
                                 0xb1 (size before relaxing)

.debug_loc      0x00000000      0x164
 *(.debug_loc)
 .debug_loc     0x00000000       0x64 out/gpio.o
 .debug_loc     0x00000064       0xd4 out/main.o
 .debug_loc     0x00000138       0x2c out/vectors.o

.debug_macinfo  0x00000000    0x729d7
 *(.debug_macinfo)
 .debug_macinfo
                0x00000000    0x359ca out/gpio.o
 .debug_macinfo
                0x000359ca    0x3ad9c out/main.o
 .debug_macinfo
                0x00070766     0x2271 out/vectors.o

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.note.gnu.arm.ident
 *(.note.gnu.arm.ident)

.ARM.attributes
                0x00000000       0x2f
 *(.ARM.attributes)
 .ARM.attributes
                0x00000000       0x21 out/startup.o
 .ARM.attributes
                0x00000021       0x33 out/gpio.o
 .ARM.attributes
                0x00000054       0x33 out/main.o
 .ARM.attributes
                0x00000087       0x33 out/vectors.o

/DISCARD/
 *(.note.GNU-stack)
                0x000004c0                PROVIDE (__text_size, (__text_end - __text_start))
                0x00000000                PROVIDE (__exidx_size, (__exidx_end - __exidx_start))
                0x00000000                PROVIDE (__data_size, (__data_end - __data_start))
                0x00000000                PROVIDE (__bss_size, (__bss_end - __bss_start))
                0x00000400                PROVIDE (__stack_size, (__stack_end - __stack_start))
                0x00004c00                PROVIDE (__heap_size, (__heap_end - __heap_start))
OUTPUT(out/stm32_blink_led.elf elf32-littlearm)

.debug_ranges   0x00000000       0x50
 .debug_ranges  0x00000000       0x18 out/gpio.o
 .debug_ranges  0x00000018       0x28 out/main.o
 .debug_ranges  0x00000040       0x10 out/vectors.o

.comment        0x00000000       0x70
 .comment       0x00000000       0x70 out/gpio.o
                                 0x71 (size before relaxing)
 .comment       0x00000000       0x71 out/main.o
 .comment       0x00000000       0x71 out/vectors.o

Cross Reference Table

Symbol                                            File
ADC1_2_IRQHandler                                 out/vectors.o
ADC3_IRQHandler                                   out/vectors.o
BusFault_Handler                                  out/vectors.o
CAN_RX1_IRQHandler                                out/vectors.o
CAN_SCE_IRQHandler                                out/vectors.o
DMA1_Channel1_IRQHandler                          out/vectors.o
DMA1_Channel2_IRQHandler                          out/vectors.o
DMA1_Channel3_IRQHandler                          out/vectors.o
DMA1_Channel4_IRQHandler                          out/vectors.o
DMA1_Channel5_IRQHandler                          out/vectors.o
DMA1_Channel6_IRQHandler                          out/vectors.o
DMA1_Channel7_IRQHandler                          out/vectors.o
DMA2_Channel1_IRQHandler                          out/vectors.o
DMA2_Channel2_IRQHandler                          out/vectors.o
DMA2_Channel3_IRQHandler                          out/vectors.o
DMA2_Channel4_5_IRQHandler                        out/vectors.o
DebugMon_Handler                                  out/vectors.o
EXTI0_IRQHandler                                  out/vectors.o
EXTI15_10_IRQHandler                              out/vectors.o
EXTI1_IRQHandler                                  out/vectors.o
EXTI2_IRQHandler                                  out/vectors.o
EXTI3_IRQHandler                                  out/vectors.o
EXTI4_IRQHandler                                  out/vectors.o
EXTI9_5_IRQHandler                                out/vectors.o
FLASH_IRQHandler                                  out/vectors.o
FSMC_IRQHandler                                   out/vectors.o
HardFault_Handler                                 out/vectors.o
I2C1_ER_IRQHandler                                out/vectors.o
I2C1_EV_IRQHandler                                out/vectors.o
I2C2_ER_IRQHandler                                out/vectors.o
I2C2_EV_IRQHandler                                out/vectors.o
MemManage_Handler                                 out/vectors.o
NMI_Handler                                       out/vectors.o
PVD_IRQHandler                                    out/vectors.o
PendSV_Handler                                    out/vectors.o
RCC_IRQHandler                                    out/vectors.o
RTCAlarm_IRQHandler                               out/vectors.o
RTC_IRQHandler                                    out/vectors.o
Reset_Handler                                     out/startup.o
                                                  out/vectors.o
SDIO_IRQHandler                                   out/vectors.o
SPI1_IRQHandler                                   out/vectors.o
SPI2_IRQHandler                                   out/vectors.o
SPI3_IRQHandler                                   out/vectors.o
SVC_Handler                                       out/vectors.o
SysTick_Handler                                   out/vectors.o
TAMPER_IRQHandler                                 out/vectors.o
TIM1_BRK_IRQHandler                               out/vectors.o
TIM1_CC_IRQHandler                                out/vectors.o
TIM1_TRG_COM_IRQHandler                           out/vectors.o
TIM1_UP_IRQHandler                                out/vectors.o
TIM2_IRQHandler                                   out/vectors.o
TIM3_IRQHandler                                   out/vectors.o
TIM4_IRQHandler                                   out/vectors.o
TIM5_IRQHandler                                   out/vectors.o
TIM6_IRQHandler                                   out/vectors.o
TIM7_IRQHandler                                   out/vectors.o
TIM8_BRK_IRQHandler                               out/vectors.o
TIM8_CC_IRQHandler                                out/vectors.o
TIM8_TRG_COM_IRQHandler                           out/vectors.o
TIM8_UP_IRQHandler                                out/vectors.o
UART4_IRQHandler                                  out/vectors.o
UART5_IRQHandler                                  out/vectors.o
USART1_IRQHandler                                 out/vectors.o
USART2_IRQHandler                                 out/vectors.o
USART3_IRQHandler                                 out/vectors.o
USBWakeup_IRQHandler                              out/vectors.o
USB_HP_CAN_TX_IRQHandler                          out/vectors.o
USB_LP_CAN_RX0_IRQHandler                         out/vectors.o
UsageFault_Handler                                out/vectors.o
WWDG_IRQHandler                                   out/vectors.o
__Reserved_0x1C_Handler                           out/vectors.o
__Reserved_0x20_Handler                           out/vectors.o
__Reserved_0x24_Handler                           out/vectors.o
__Reserved_0x28_Handler                           out/vectors.o
__Reserved_0x34_Handler                           out/vectors.o
__bss_end                                         out/startup.o
__bss_start                                       out/startup.o
__data_end                                        out/startup.o
__data_init_start                                 out/startup.o
__data_start                                      out/startup.o
__default_low_level_init                          out/startup.o
__main_stack_end                                  out/vectors.o
__process_stack_end                               out/startup.o
gpio_init                                         out/gpio.o
                                                  out/main.o
gpio_pin_cfg                                      out/gpio.o
                                                  out/main.o
low_level_init_0                                  out/startup.o
low_level_init_1                                  out/startup.o
main                                              out/main.o
                                                  out/startup.o
vectors                                           out/vectors.o
